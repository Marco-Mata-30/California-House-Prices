import streamlit as st
import plotly.express as px
import plotly.graph_objects as go
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import io

st.title('Regress√£o - Base de dados de casas na Calif√≥rnia (1990)')
st.markdown('Como prever o pre√ßo de uma casa usando modelos de *Machine Learning*?')
st.markdown('---')
st.markdown('''Esse projeto foi desenvolvido como inspira√ß√£o do livro "*Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow*" de Aur√©lien G√©ron. Ainda nos primeiros cap√≠tulos do livro, o autor apresenta uma introdu√ß√£o ao Machine Learning e aos conceitos de regress√£o.
    O objetivo √© prever o pre√ßo das casas em regi√µes da Calif√≥rnia usando modelos de regress√£o. A base de dados utilizada √© a "California Housing Prices" do **Kaggle**, que cont√©m informa√ß√µes sobre casas na Calif√≥rnia em 1990.''')

st.markdown('---')

house_db = pd.read_csv("housing.csv")

st.subheader('EDA (*Exploratory Data Analysis*):')

st.markdown('''**Segue a descri√ß√£o da base de dados:**
1. **longitude** ‚Äî Coordenada geogr√°fica de longitude da localiza√ß√£o;

2. **latitude** ‚Äî Coordenada geogr√°fica de latitude da localiza√ß√£o;

3. **housing_median_age** ‚Äî Idade mediana das constru√ß√µes residenciais na √°rea;

4. **total_rooms** ‚Äî Total de c√¥modos por √°rea.;

5. **total_bedrooms** ‚Äî Total de quartos por √°rea;

6. **population** ‚Äî Popula√ß√£o total da √°rea;

7. **households** ‚Äî N√∫mero de domic√≠lios na √°rea;

8. **median_income** ‚Äî Renda mediana da √°rea, em dezenas de milhares de d√≥lares;

9. **median_house_value** ‚Äî Valor mediano dos im√≥veis na √°rea (em d√≥lares);

**‚ö†Ô∏è Observa√ß√£o importante:** essa vari√°vel possui um valor m√°ximo truncado em $500.000,00. Isso significa que im√≥veis com valores superiores foram limitados a esse teto, o que pode introduzir um vi√©s nos modelos de regress√£o e limitar sua capacidade de prever valores muito altos com precis√£o.

10 **ocean_proximity** ‚Äî Proximidade com o oceano, uma vari√°vel categ√≥rica que indica se a √°rea est√°:

* *NEAR BAY*: Pr√≥ximo √† ba√≠a;

* *<1H OCEAN*: Menos de 1 hora do oceano;

* *INLAND*: Interior, longe do oceano;

* *NEAR OCEAN*: Pr√≥ximo ao oceano;

* *ISLAND*: Em uma ilha.''')

st.dataframe(house_db.head(10))

st.markdown('Logo no in√≠cio da nossa explora√ß√£o da base de dados, podemos observar que ela possui alguns valores ausentes, especialmente na coluna "**total_bedrooms**". Isto pode impactar a an√°lise e os modelos de regress√£o que iremos construir. Portanto, √© importante lidar com esses valores ausentes antes de prosseguir com a modelagem.')

buffer = io.StringIO()
house_db.info(buf=buffer)
s = buffer.getvalue()
st.code(s, language='text')

st.markdown('''Para lidar com os valores ausentes, iremos usar o m√©todo de preenchimento a partir da Regress√£o Polinomial de grau 2. 
Esse m√©todo √© eficaz para preencher valores ausentes em colunas num√©ricas, como "**total_bedrooms**", utilizando outras colunas como preditores. A ideia √© treinar um modelo de regress√£o com as colunas dispon√≠veis e prever os valores ausentes com base nesse modelo.
A escolha desse m√©todo √© justificada por conta de sua efici√™ncia em lidar com dados num√©ricos e sua capacidade de capturar rela√ß√µes entre as vari√°veis, o que pode resultar em previs√µes mais precisas do que m√©todos mais simples, como a m√©dia ou mediana.

Uma prova de sua efici√™ncia e precis√£o s√£o os resultados obtidos a partir das avalia√ß√µes de desempenho do modelo, que mostram que o m√©todo de regress√£o √© capaz de prever os valores ausentes com uma precis√£o razo√°vel, minimizando o impacto dos dados ausentes na an√°lise geral da base de dados:
''')

st.markdown('''```
MAE: 25.22
MSE: 1685.34
RMSE: 41.05
R¬≤: 0.9906
```''')

house_db_regressao = pd.read_csv("housing_regr.csv")

st.markdown('''Ap√≥s o preenchimento dos valores ausentes, podemos prosseguir com a an√°lise explorat√≥ria e a constru√ß√£o dos modelos de regress√£o.

Nossa primeira an√°lise ser√° a montagem de um **mapa da Calif√≥rnia**, onde cada ponto representa uma casa, e a cor do ponto indica o valor mediano da casa, e o tamanho do ponto indica a popula√ß√£o da √°rea. Isso nos permitir√° visualizar a distribui√ß√£o dos pre√ßos das casas na regi√£o e identificar poss√≠veis padr√µes geogr√°ficos.''')

# Criando a figura e o gr√°fico
fig, ax = plt.subplots(figsize=(10, 7))
scatter = ax.scatter(
    house_db_regressao['longitude'],
    house_db_regressao['latitude'],
    c=house_db_regressao['median_house_value'],
    cmap='viridis',
    alpha=0.5,
    s=house_db_regressao['population'] / 100
)

# Configura√ß√µes do gr√°fico
cbar = plt.colorbar(scatter, ax=ax, label='Valor Mediano das Casas')
ax.set_xlabel('Longitude')
ax.set_ylabel('Latitude')
ax.set_title('Mapa de Calor dos Valores das Casas na Calif√≥rnia')

# Exibindo no Streamlit
st.pyplot(fig)
st.markdown('''Nessa primeira an√°lise, podemos observar que casas localizadas pr√≥ximas ao oceano tendem a ter valores medianos mais altos, enquanto casas localizadas no interior tendem a ter valores medianos mais baixos. Ao mesmo tempo, a popula√ß√£o da √°rea tamb√©m parece influenciar o valor mediano das casas, com √°reas mais populosas apresentando valores medianos mais altos.''')

st.markdown('''Seguindo para nossa pr√≥xima an√°lise iremos montar **gr√°ficos de dispers√£o** para analisar a rela√ß√£o entre as vari√°veis num√©ricas da base de dados.
Esses gr√°ficos nos ajudar√£o a identificar correla√ß√µes entre as vari√°veis e a entender melhor como elas se relacionam com o valor mediano das casas.
Abaixo est√£o os gr√°ficos de dispers√£o para as vari√°veis 'housing_median_age', 'total_rooms', 'total_bedrooms', 'population': ''')

# Criando a matriz de dispers√£o com Plotly
grafico = px.scatter_matrix(
    house_db_regressao,
    dimensions=['housing_median_age', 'total_rooms', 'total_bedrooms', 'population'],
    color='median_house_value',
    title='Matriz de Dispers√£o - Casas na Calif√≥rnia',
    height=700
)

grafico.update_traces(diagonal_visible=False)  # esconde gr√°ficos na diagonal

st.plotly_chart(grafico, use_container_width=True)

st.markdown('''Uma an√°lise importante a ser feita √© a distribui√ß√£o dos valores mediano das casas.
Para isso, iremos utilizar o **histograma** e o **boxplot**. O histograma nos permitir√° visualizar a distribui√ß√£o dos valores, enquanto o boxplot nos ajudar√° a identificar poss√≠veis outliers e a dispers√£o dos dados.
Abaixo est√£o os gr√°ficos de histograma 'median_house_value': ''')

# Criando a figura
fig, ax = plt.subplots()
sns.histplot(house_db_regressao['median_house_value'], kde=True, ax=ax)

# T√≠tulo e r√≥tulos (opcional)
ax.set_title('Distribui√ß√£o do Valor Mediano das Casas')
ax.set_xlabel('Valor Mediano')
ax.set_ylabel('Frequ√™ncia')

# Exibindo no Streamlit
st.pyplot(fig)
st.text('''Note que ocorre uma concentra√ß√£o de valores em torno de $500.000,00. Isso acontece porque a vari√°vel "median_house_value" possui um valor m√°ximo truncado em $500.000,00. Ou seja, im√≥veis com valores superiores foram limitados a esse teto, o que pode introduzir um vi√©s nos modelos de regress√£o e limitar sua capacidade de prever valores muito altos com precis√£o.''')
# Criando a figura
fig, ax = plt.subplots(figsize=(10, 6))  # Tamanho opcional
sns.boxplot(x='ocean_proximity', y='median_house_value', data=house_db_regressao, ax=ax)

# T√≠tulo e r√≥tulos
ax.set_title('Valor Mediano das Casas por Proximidade ao Oceano')
ax.set_xlabel('Proximidade ao Oceano')
ax.set_ylabel('Valor Mediano das Casas')

# Exibindo no Streamlit
st.pyplot(fig)
st.markdown('''O BoxPlot apresenta a seguinte vis√£o: O eixo X representa a proximidade com o oceano, enquanto o eixo Y representa o valor mediano das casas.''')
st.markdown('''**Interpreta√ß√£o do BOXPLOT de acordo com a proximidade com o oceano**:
* NEAR BAY e NEAR OCEAN

Valores medianos mais altos, indicando que estar perto da ba√≠a ou do oceano eleva o pre√ßo das casas.

Tamb√©m t√™m uma faixa de pre√ßos bem distribu√≠da.

* <1H OCEAN

Tem uma mediana menor que as anteriores.

Alguns outliers indicam casas de valor elevado mesmo n√£o estando t√£o perto do mar.

* INLAND

Menores pre√ßos medianos disparado.

Distribui√ß√£o concentrada em valores mais baixos.

Muitos outliers para cima, mas o grosso das casas √© barato.

* ISLAND

Curiosamente, tem um pre√ßo mediano bem alto, com pouca variabilidade.

Pode indicar poucas observa√ß√µes, pois o box √© estreito e com poucos pontos.''')

st.markdown('''Por fim, iremos analisar a correla√ß√£o entre as vari√°veis num√©ricas da base de dados.
Para isso, iremos utilizar o mapa de calor (heatmap) do Seaborn. O mapa de calor nos permitir√° visualizar a correla√ß√£o entre as vari√°veis e identificar quais delas est√£o mais relacionadas com o valor mediano das casas.''')
st.image('img/corr.png', caption='Gr√°fico gerado a partir de c√≥digo Python', use_container_width=True)
st.markdown('''A partir do mapa de calor, podemos observar que a vari√°vel da mediana salarial da regi√£o ('*median_income*') √© a que possui a maior correla√ß√£o positiva com o valor mediano das casas.''')
st.markdown('---')
st.subheader('M√ÉOS-√Ä-OBRA - Prevendo o Valor Mediano das Casas')
st.markdown('''Entre os modelos de regress√£o que iremos utilizar est√£o:
1. Regress√£o M√∫ltipla;

2. Regress√£o Polinomial;

3. Regress√£o de Ridge;

4. Regress√£o Lasso;

5. ElasticNet;

6. Regress√£o de √Årvore de Decis√£o;

7. Regress√£o Random Forest;

8. Regress√£o SVM (SVR);

9. Regress√£o de Redes Neurais.
''')
st.markdown('''Ap√≥s os testes e avalia√ß√µes de desempenho dos modelos, o modelo de Regress√£o Random Forest se destacou como o mais eficaz para prever o valor mediano das casas na Calif√≥rnia, apresentando os seguintes resultados:
#### üëëRegress√£o Random Forestüëë:
* Tempo de treinamento: 29.48 segundos
* MAE: 31.852,70
* MSE: 2.429.746.971,64
* RMSE: 49.292,46
* R¬≤: 0,8217

Para alcan√ßarmos esses resultados, foram utilizados 200 estimadores (√°rvores) no modelo de Regress√£o Random Forest. Esse n√∫mero foi escolhido com base em testes de desempenho, onde foi observado que aumentar o n√∫mero de √°rvores al√©m de 200 n√£o resultou em melhorias significativas na precis√£o do modelo, mas aumentou o tempo de treinamento. Portanto, 200 √°rvores foram consideradas um bom compromisso entre desempenho e efici√™ncia computacional.

Al√©m disso, o modelo foi configurado com um Random State de 42 para garantir a reprodutibilidade dos resultados. Isso significa que, ao executar o c√≥digo v√°rias vezes, os resultados permanecer√£o consistentes, permitindo uma compara√ß√£o justa entre diferentes execu√ß√µes e modelos.

Para reduzirmos o Overfitting, foi utilizado o par√¢metro "max_depth" com valor de 20. Isso limita a profundidade m√°xima das √°rvores, evitando que o modelo se torne excessivamente complexo e se ajuste demais aos dados de treinamento, o que poderia prejudicar sua capacidade de generaliza√ß√£o para novos dados, e min samples leaf com valor de 3. Isso significa que cada folha da √°rvore deve conter pelo menos 3 amostras, o que ajuda a evitar que o modelo se ajuste demais aos dados de treinamento e melhora sua capacidade de generaliza√ß√£o.

O seguinte gr√°fico faz uma compara√ß√£o entre os valores reais e os valores previstos pelo modelo de Regress√£o Random Forest. O eixo X representa os valores reais, enquanto o eixo Y representa os valores previstos pelo modelo. A linha diagonal representa a linha de perfei√ß√£o, onde os valores previstos seriam iguais aos valores reais. Quanto mais pr√≥ximo os pontos estiverem dessa linha, melhor ser√° o desempenho do modelo.''')

st.image('img/Final.png', caption='Gr√°fico gerado a partir de c√≥digo Python', use_container_width=True)

st.markdown('''---''')
st.subheader('Conclus√£o')
st.markdown('''Finalizamos mais um projeto de Machine Learning, desta vez focado em um problema de regress√£o, com o objetivo de prever os valores medianos dos pre√ßos de casas na Calif√≥rnia na d√©cada de 1990. O modelo alcan√ßou um desempenho razo√°vel, com um MAE (Erro Absoluto M√©dio) de aproximadamente 31.852,70.

Apesar do bom desempenho em termos absolutos, √© importante ressaltar que, em um cen√°rio real de neg√≥cios ‚Äî como uma empresa que dependa da previs√£o precisa dos pre√ßos das casas ‚Äî, esse n√≠vel de erro pode ser considerado elevado. Em situa√ß√µes comerciais, um R¬≤ pr√≥ximo de 0.95 ou superior seria mais desej√°vel para minimizar riscos e perdas financeiras.

Portanto, embora o modelo desenvolvido seja adequado para fins acad√™micos ou explorat√≥rios, ele ainda carece de aprimoramentos e ajustes para aplica√ß√µes em ambiente de produ√ß√£o ou decis√µes cr√≠ticas de neg√≥cios.''')

st.markdown('''---''')
st.subheader('Refer√™ncias')
st.markdown('''
1. G√©ron, A. (2019). Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow. O'Reilly Media.
2. Kaggle. (n.d.). California Housing Prices Dataset. Retrieved from https://www.kaggle.com/datasets/camnugent/california-housing-prices
3. Scikit-learn Documentation. (n.d.). Retrieved from https://scikit-learn.org/1.6/api/sklearn.html          
''')